{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.1.0",
    "description": "An API for managing blog posts, including CRUD operations and advanced search functionality."
  },
  "host": "localhost:5002",
  "basePath": "/",
  "tags": [
    {
      "name": "Post",
      "description": "CRUD and search operations for blog posts."
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "summary": "Retrieve all posts",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "Field to sort by. Valid values: 'id', 'title', 'content', 'author', 'date'."
          },
          {
            "name": "direction",
            "in": "query",
            "type": "string",
            "description": "Sort direction. Valid values: 'asc', 'desc'."
          }
        ],
        "responses": {
          "200": {
            "description": "List of posts",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Post" }
            }
          },
          "400": {
            "description": "Invalid sort field"
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": { "$ref": "#/definitions/PostInput" },
            "required": true,
            "description": "The new post to create."
          }
        ],
        "responses": {
          "201": {
            "description": "Post created",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "delete": {
        "summary": "Delete a post by ID",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the post to delete."
          }
        ],
        "responses": {
          "200": { "description": "Post deleted successfully" },
          "404": { "description": "Post not found" }
        }
      },
      "put": {
        "summary": "Update a post by ID",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the post to update."
          },
          {
            "name": "body",
            "in": "body",
            "schema": { "$ref": "#/definitions/PostInput" },
            "required": true,
            "description": "The updated post data."
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Post not found" }
        }
      }
    },
    "/api/posts/search": {
      "get": {
        "summary": "Search for posts",
        "tags": ["Post"],
        "parameters": [
          { "name": "title", "in": "query", "type": "string", "description": "Search term for the post title." },
          { "name": "content", "in": "query", "type": "string", "description": "Search term for the post content." },
          { "name": "author", "in": "query", "type": "string", "description": "Search term for the post author." },
          { "name": "date", "in": "query", "type": "string", "description": "Search term for the post date (YYYY-MM-DD)." }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Post" }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "example": 1 },
        "title": { "type": "string", "example": "Sample Title" },
        "content": { "type": "string", "example": "Sample content" },
        "author": { "type": "string", "example": "John Doe" },
        "date": { "type": "string", "format": "date", "example": "2024-12-18" }
      }
    },
    "PostInput": {
      "type": "object",
      "properties": {
        "title": { "type": "string", "example": "New Title" },
        "content": { "type": "string", "example": "New content" },
        "author": { "type": "string", "example": "Jane Doe" }
      },
      "required": ["title", "content", "author"]
    }
  }
}